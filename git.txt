git init    	初始化仓库

git add    	添加文件到仓库

git commit -m "提交说明"    提交文件到仓库

git status	查看仓库状态，跟filename查看指定文件状态，不加查看所有文件状态 

git diff	查看文件做了那些修改

git log		查看提交记录

git reset --hard HEAD^ 	回退到上个版本，HEAD^^回退到上上个版本，GEAD~100回退上100个版本，commit id 回退或者恢复指定提交版本，无需全部id号，确定唯一即可

git reflog	记录每一次操作的命令，回退版本时在恢复，可使用此命令查看 commit id

git diff HEAD -- filename	对比工作区和版本库里面最新版本的区别

修改文件
执行顺序：git add filename => git commit -m ""
git add 提交 工作区文件到暂存区 
git commit 提交暂存区文件到当前分支

修改文件
git commit -m ""
由于没有执行git add 把工作区文件提交到暂存区 修改不生效

三种情况下的撤销修改：
1、文件只是修改没有  git add 也就没有 git commit -m "" 
    git checkout -- filename	注意 "--"必须，否则是切换分支

2、文件修改后 git add 到暂存区  没有 git commit -m "" 提交到分支
    git reset HEAD filename    把暂存区的修改撤销掉，重新放回工作区
    git checkout -- filename   丢弃工作区的修改
  
3、文件修改后 git add 到暂存区 并且 git commit -m "" 提交到分支
    git reset --hard HEAD^    回退上个版本

删除文件
vi filename     新建一个文件
git add filename    提交文件到暂存区
git commit -m ""    提交文件到版本库

rm filename    从本地删除文件

    两种情况
        从版本库删除文件
	从版本库恢复文件

	1、git rm filename    从版本库删除文件
	   git commit -m ""   并且提交到版本库

	2、git checkout -- filename    从版本库恢复文件到本地
    git rm filename 和 git checkout -- filename    执行过git rm 后执行git checkout -- filename 会报错，文件已经从版本库删除，无法再从版本库恢复
